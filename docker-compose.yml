
version: '3.8'

services:
  apache:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: apache
    ports:
      - "80:80"
    volumes:
      - ./backend/laravel:/var/www/html/backend/laravel
    depends_on:
      - mysql
    networks:
      - app-network

  mysql:
    image: mysql:5.7
    container_name: mysql
    command: 
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: CourtControl
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    depends_on:
      - mysql
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: rootpassword
    networks:
      - app-network

  laravel:
    build:
      context: ./backend/laravel
      dockerfile: Dockerfile
    container_name: laravel
    volumes:
      - ./backend/laravel:/var/www/html
    ports:
      - "8000:8000"
    depends_on:
      - mysql
    networks:
      - app-network

  vue:
    build:
      context: ./frontend/vue
    container_name: vue_frontend
    ports:
      - "8081:8080"
    networks:
      - app-network

  springboot:
    build:
      context: ./backend/SpringBoot
    container_name: springboot
    ports:
      - "8085:8085" # Mapeo de puerto externo a interno actualizado
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/CourtControl
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rootpassword
    depends_on:
      - mysql
    networks:
      - app-network

  react:
    build:
      context: ./frontend/react
      dockerfile: Dockerfile
    container_name: react_frontend
    ports:
      - "3000:3000"
    networks:
      - app-network



volumes:
  db_data:

networks:
  app-network:
    driver: bridge

